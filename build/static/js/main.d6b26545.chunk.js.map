{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ChartBar","max","label","percentageVal","Math","round","style","height","Chart","chartData","reduce","objData","January","February","March","April","May","June","July","August","September","October","November","December","maxVal","Object","keys","curr","key","substring","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","showForm","setShowForm","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","newExpense","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6b26545.chunk.js","sourcesContent":["import './Card.css'\r\n\r\nconst Card = (props) => {\r\n    \r\nconst classes = 'card ' + props.className;\r\n    return (\r\n        <div className= {classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const selectedYearHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={selectedYearHandler}>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' })\r\n    const year = props.date.getFullYear()\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' })\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from './ExpenseItem'\r\nimport './ExpensesList.css'\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n    if (props.expenses.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>No expenses found</h2>\r\n    }\r\n \r\n    return <ul className='expenses-list'>\r\n       { props.expenses.map(expense => {\r\n            return <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date} />\r\n        })\r\n        }\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  const max = props.max;\r\n  const value = props.value;\r\n  const label = props.label;\r\n  let percentageVal = \"0%\";\r\n\r\n  if (max > 0) {\r\n    percentageVal = Math.round((value / max) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: percentageVal }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const expenses = props.expenses;\r\n\r\n  const chartData = expenses.reduce(\r\n    (objData, expense) => {\r\n      if (objData[expense.date.toLocaleString(\"default\", { month: \"long\" })]) {\r\n        objData[expense.date.toLocaleString(\"default\", { month: \"long\" })] =\r\n          objData[expense.date.toLocaleString(\"default\", { month: \"long\" })] +\r\n          expense.amount;\r\n      } else {\r\n        objData[expense.date.toLocaleString(\"default\", { month: \"long\" })] =\r\n          expense.amount;\r\n      }\r\n      return objData;\r\n    },\r\n    {\r\n      January: 0,\r\n      February: 0,\r\n      March: 0,\r\n      April: 0,\r\n      May: 0,\r\n      June: 0,\r\n      July: 0,\r\n      August: 0,\r\n      September: 0,\r\n      October: 0,\r\n      November: 0,\r\n      December: 0,\r\n    }\r\n  );\r\n\r\n  const maxVal = Object.keys(chartData).reduce((max, curr) => {\r\n    if (chartData[curr] > max) {\r\n      max = chartData[curr];\r\n    }\r\n    return max;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {Object.keys(chartData).map((key) => (\r\n        <ChartBar\r\n          key={key}\r\n          label={key.substring(0, 3)}\r\n          value={chartData[key]}\r\n          max={maxVal}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Chart from \"../Chart/Chart\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  // let expensesContent = <p>No content find</p>\r\n\r\n  // if(filteredExpenses.length > 0){\r\n  //     expensesContent = filteredExpenses.map(expense => {\r\n  //         return <ExpenseItem\r\n  //              key={expense.id}\r\n  //              title={expense.title}\r\n  //              amount={expense.amount}\r\n  //              date={expense.date}\r\n  //          />\r\n  //      })\r\n  // }\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n\r\n      {/* similar to conditional statement if length is equal to 0 then <p>No expenses found</p> show \r\n                && usually used in  js for conditio9nal statements*/}\r\n      {/* {filteredExpenses.length === 0 && <p>No expenses found</p>}\r\n            \r\n            {filteredExpenses.length > 0 && filteredExpenses.map(expense => {\r\n               return <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                />\r\n            })} }*/}\r\n\r\n      <Chart expenses={filteredExpenses} />\r\n      <ExpensesList expenses={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  // using multiple states method (most prefered method is this)\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  // second method\r\n  // using single useState\r\n  // const [userInputs, setUSerInputs] = useState({\r\n  //     enteredTitle: '',\r\n  //     enteredAmount: '',\r\n  //     enteredDate: '',\r\n  // })\r\n\r\n  // const titleChangeHandler = (event) => {\r\n\r\n  //     // setUSerInputs({\r\n  //     //     // this will may not work properly sometimes\r\n  //     //     // since state scheduler\r\n  //     //     //therefore we may used outdated state values\r\n  //     //     ...userInputs,\r\n  //     //     enteredTitle: event.target.value\r\n  //     // })\r\n\r\n  //     // since above way may produce wrong output\r\n  //     // keep in mind use this method if using single state\r\n  //     // this way will used the prevState only when creating new state\r\n  //     setUSerInputs((prevState) => {\r\n  //         return ({\r\n  //             ...prevState,\r\n  //             enteredTitle: event.target.value\r\n  //         })\r\n  //     })\r\n\r\n  //     console.log(userInputs)\r\n  // }\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n\r\n    setShowForm(false);\r\n  };\r\n\r\n  const showFormOnClickHandler = () => {\r\n    setShowForm(true);\r\n  };\r\n\r\n  const cancelOnClickHandler = () => {\r\n    setShowForm(false);\r\n  };\r\n\r\n  if (!showForm) {\r\n    return <button onClick={showFormOnClickHandler}>Add New Expense</button>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredTitle}\r\n              onChange={titleChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              value={enteredAmount}\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={enteredDate}\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"new-expense__actions\">\r\n          <button onClick={cancelOnClickHandler}>Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n\r\n/* Best way to do with singale state and single handler\r\n   without the two way binding as well*/\r\n\r\n// function Form() {\r\n//     const [userInput, setUserInput] = useState({mail: '', password: ''})\r\n//     const handleUserInput = (e) => {\r\n//       setUserInput((prevState)=> (\r\n//         {...prevState,\r\n//         [e.target.name]: e.target.value}\r\n//       ))\r\n//     }\r\n//     return (\r\n//         <form>\r\n//           <input value={userInput.mail} name='mail' onChange={handleUserInput}/>\r\n//           <input value={userInput.password} name='password' onChange={handleUserInput}/>\r\n//         </form>\r\n//     );\r\n//   }\r\n","import './NewExpense.css'\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\n\r\nconst NewExpense = (props) =>{\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) =>{\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddExpense(expenseData)\r\n    }\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  const addExpenseHandler = (newExpense) => {\n    setExpenses(prevState => {\n      return ([newExpense, ...prevState])\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}