{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Files\\\\React\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  // using multiple states method (most prefered method is this)\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    console.log(enteredTitle);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  }; // second method\n  // using single useState\n  // const [userInputs, setUSerInputs] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: '',\n  // })\n  // const titleChangeHandler = (event) => {\n  //     // setUSerInputs({\n  //     //     // this will may not work properly sometimes\n  //     //     // since state scheduler \n  //     //     //therefore we may used outdated state values\n  //     //     ...userInputs,\n  //     //     enteredTitle: event.target.value\n  //     // })\n  //     // since above way may produce wrong output \n  //     // keep in mind use this method if using single state \n  //     // this way will used the prevState only when creating new state\n  //     setUSerInputs((prevState) => {\n  //         return ({\n  //             ...prevState,\n  //             enteredTitle: event.target.value\n  //         })\n  //     })\n  //     console.log(userInputs)\n  // }\n\n\n  const sumbitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: enteredDate\n    };\n    console.log(expenseData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/My Files/React/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","console","log","amountChangeHandler","dateChangeHandler","sumbitHandler","preventDefault","expenseData","title","amount","date","submitHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = () => {\r\n\r\n    // using multiple states method (most prefered method is this)\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\")\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\")\r\n    const [enteredDate, setEnteredDate] = useState(\"\")\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value)\r\n        console.log(enteredTitle)\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value)\r\n    }\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value)\r\n    }\r\n\r\n    // second method\r\n    // using single useState\r\n    // const [userInputs, setUSerInputs] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: '',\r\n    // })\r\n\r\n    // const titleChangeHandler = (event) => {\r\n\r\n    //     // setUSerInputs({\r\n    //     //     // this will may not work properly sometimes\r\n    //     //     // since state scheduler \r\n    //     //     //therefore we may used outdated state values\r\n    //     //     ...userInputs,\r\n    //     //     enteredTitle: event.target.value\r\n    //     // })\r\n\r\n    //     // since above way may produce wrong output \r\n    //     // keep in mind use this method if using single state \r\n    //     // this way will used the prevState only when creating new state\r\n    //     setUSerInputs((prevState) => {\r\n    //         return ({\r\n    //             ...prevState,\r\n    //             enteredTitle: event.target.value\r\n    //         })\r\n    //     })\r\n\r\n    //     console.log(userInputs)\r\n    // }\r\n\r\n    const sumbitHandler = (event) => {\r\n        event.preventDefault();     \r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: enteredDate,\r\n        }\r\n        console.log(expenseData)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitHandler}>\r\n                <div className='new-expense__controls'>\r\n                    <div className='new-expense__control'>\r\n                        <label>Title</label>\r\n                        <input type='text' onChange={titleChangeHandler} />\r\n                    </div>\r\n                    <div className='new-expense__control'>\r\n                        <label>Amount</label>\r\n                        <input type='number' min='0.01' step='0.01' onChange={amountChangeHandler} />\r\n                    </div>\r\n                    <div className='new-expense__control'>\r\n                        <label>Date</label>\r\n                        <input type='date' min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} />\r\n                    </div>\r\n                </div>\r\n                <div className='new-expense__actions'>\r\n                    <button type='submit'>Add Expense</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}